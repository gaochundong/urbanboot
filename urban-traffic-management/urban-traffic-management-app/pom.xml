<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ai.sangmado.urbanboot</groupId>
        <artifactId>urban-traffic-management</artifactId>
        <version>1039.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>urban-traffic-management-app</artifactId>
    <version>1039.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Urban Traffic Management Application</name>
    <description>Urban Traffic Management Application</description>

    <dependencies>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--spring-boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--web-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--spring-cloud-consul-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.netflix.hystrix</groupId>
                    <artifactId>hystrix-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-autoconfigure</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>

        <!--modules-->
        <dependency>
            <groupId>ai.sangmado.urbanboot</groupId>
            <artifactId>urban-traffic-management-service</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.sangmado.urbanboot</groupId>
            <artifactId>urban-traffic-management-contract</artifactId>
        </dependency>

        <!--test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--            <plugin>-->
            <!--                <groupId>com.alibaba.citrus.tool</groupId>-->
            <!--                <artifactId>autoconfig-maven-plugin</artifactId>-->
            <!--                <configuration>-->
            <!--                    <charset>UTF-8</charset>-->
            <!--                    <strict>true</strict>-->
            <!--                    <skip>false</skip>-->
            <!--                    <userProperties>${autoconfig.path}/${autoconfig.file}</userProperties>-->
            <!--                    <exploding>true</exploding>-->
            <!--                    <explodedDirectory>${project.build.outputDirectory}</explodedDirectory>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>autoconfig</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <addResources>true</addResources>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <classifier>${maven.build.package.classifier}</classifier>
                            <excludeDevtools>true</excludeDevtools>
                            <finalName>${project.build.finalName}-${maven.build.timestamp}</finalName>
                        </configuration>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>ai.sangmado.urbanboot.urban.traffic.management.Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>io.fabric8</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <extensions>true</extensions>-->
<!--                <configuration>-->
<!--                    <verbose>false</verbose>-->
<!--                    <useColor>true</useColor>-->
<!--                    <images>-->
<!--                        <image>-->
<!--                            <name>-->
<!--                                ${project.artifactId}:${project.version}-->
<!--                            </name>-->
<!--                            <build>-->
<!--                                <contextDir>${project.basedir}</contextDir>-->
<!--                                <dockerFile>${project.basedir}/../docker/Dockerfile</dockerFile>-->
<!--                                <tags>-->
<!--                                    <tag>latest</tag>-->
<!--                                    <tag>${project.version}</tag>-->
<!--                                </tags>-->
<!--                            </build>-->
<!--                        </image>-->
<!--                    </images>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>install</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>push-image</id>-->
<!--                        <phase>deploy</phase>-->
<!--                        <goals>-->
<!--                            <goal>push</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
